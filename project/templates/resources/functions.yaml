AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Definição das Funções Lambda

Parameters:
  Env:
    Type: String
  RoleArn:
    Type: String
  QueueUrl:
    Type: String
  QueueARN:
    Type: String

Globals:
  Function:
    Metadata:
      BuildMethod: go1.x
    Runtime: provided.al2023
    Architectures:
      - x86_64
    Timeout: 15
    MemorySize: 128
    Environment:
      Variables:
        STAGE: !Ref Env

Resources:
  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../src/register
      Handler: bootstrap
      Role: !Ref RoleArn
      Events:   # Eventos de API Gateway
        ApiEvent:
          Type: Api
          Properties:
            Path: /register # Caminho do endpoint
            Method: POST
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          QUEUE_URL: !Ref QueueUrl # URL da fila SQS
  
  WriterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../src/writer
      Handler: bootstrap
      Role: !Ref RoleArn
      Events:   # Eventos de SQS
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !Ref QueueARN # ARN da fila SQS
            BatchSize: 10 # Número máximo de mensagens a serem processadas em lote
            Enabled: true
      ReportBatchItemFailures: true


  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Env
      DefinitionBody:
        swagger: '2.0' # API segue o formato OpenAPI/Swagger 2.0. Isso permite definir os endpoints, métodos e integrações da API de forma estruturada.
        info:
          title: !Sub 'EntryPointAPI-${Env}' # Nome da API
        paths:
          /register:
            post:
              x-amazon-apigateway-integration: # Integração com o AWS Lambda
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegisterFunction.Arn}/invocations'
                httpMethod: POST
                type: aws_proxy # API Gateway passa a solicitação HTTP completa (incluindo headers, body, query parameters, etc.) diretamente para a função Lambda.

Outputs:
  RegisterFunction:
    Value: !GetAtt RegisterFunction.Arn
  ApiGatewayUrl:
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Env}'